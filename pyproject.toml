[tool.poetry]
name = "anymail-history"
version = "0.1.3"
description = "Email History for Django Anymail"
license = "MIT"
authors = [
    "Pascal Fouque <fouquepascal@gmail.com>",
    "Matthieu Etchegoyen <etchegom@gmail.com>",
]
maintainers = [
    "Pascal Fouque <fouquepascal@gmail.com>",
    "Matthieu Etchegoyen <etchegom@gmail.com>",
]
readme = "README.md"
homepage = "https://github.com/pfouque/anymail-history"
repository = "https://github.com/pfouque/anymail-history"
documentation = "https://github.com/pfouque/anymail-history"
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [{ include = "anymail_history" }]

[tool.poetry.dependencies]
python = "^3.8"
django = "^3.2 || ^4.0 || ^4.1 || ^4.2"
django-anymail = "^8.6 || ^9.0"

[tool.poetry.group.dev.dependencies]
black = "*"
coverage = "*"
django-stubs = {extras = ["compatible-mypy"], version = "*"}
freezegun = "*"
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
pytest-django = "*"
ruff = "*"

[tool.black]
line-length = 90
target-version = ['py38']

[tool.ruff]
line-length = 90
target-version = "py38"

select = [
  # https://github.com/charliermarsh/ruff#table-of-contents
  "F",  # Pyflakes
  "E",  # pycodestyle
  "W",  # pycodestyle
  "C90",  # mccabe
  "I",  # isort
  # "D",  # pydocstyle
  "UP",  # pyupgrade
  "N",  # pep8-naming
  # "YTT",  # flake8-2020
  # "ANN",  # flake8-annotations
  # "S",  # flake8-bandit
  "BLE",  # flake8-blind-except
  "FBT",  # flake8-boolean-trap
  "B",  # flake8-bugbear
  # "A",  # flake8-builtins
  "C4",  # flake8-comprehensions
  # "T10",  # flake8-debugger
  # "EM",  # flake8-errmsg
  "ISC",  # flake8-implicit-str-concat
  # "ICN",  # flake8-import-conventions
  # "T20",  # flake8-print
  # "PT",  # flake8-pytest-style
  # "Q",  # flake8-quotes
  # "RET",  # flake8-return
  # "SIM",  # flake8-simplify
  "TID",  # flake8-tidy-imports
  # "ARG",  # flake8-unused-arguments
  # "DTZ",  # flake8-datetimez
  # "ERA",  # eradicate
  # "PD",  # pandas-vet
  "PGH",  # pygrep-hooks
  # "PLC",  # Pylint
  # "PLE",  # Pylint
  # "PLR",  # Pylint
  # "PLW",  # Pylint
  # "PIE",  # flake8-pie
  # "COM",  # flake8-commas
  "INP",  # flake8-no-pep420
  "RUF",  # Ruff-specific rules
]
ignore = [
    "E501",  # Line too long
]

unfixable = [
  "F401"  # unused-import
]

fix = true

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = "anymail.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[tool.django-stubs]
django_settings_module = "tests.settings"

[build-system]
requires = ["poetry-core> = 1.2.0"]
build-backend = "poetry.core.masonry.api"
